name: Build and Publish Docker Image

on:
  workflow_run:
    workflows: ["Lint and Test"]  # Name of the first workflow
    types:
      - completed

jobs:
  build:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}  # Trigger only if previous workflow succeeded
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the code
    - name: Checkout code
      uses: actions/checkout@v4

    # Step 2: Set up Docker Buildx (for better Docker builds)
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    # Step 3: get version
    - name: Get version
      id: version
      run: |
        version=$(grep -oP "version=\"\K[0-9.]+" app/main.py || echo "0.0.0")
        echo "version=$version" >> $GITHUB_OUTPUT

    # Step 3: Log in to Docker Hub
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}  # DockerHub username from GitHub secrets
        password: ${{ secrets.DOCKER_TOKEN }}  # DockerHub token (ReadWrite) from GitHub secrets

    # Step 4: Build and tag Docker image
    - name: Build Docker image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/user-manager:${{ github.sha }} .  # Tag with commit SHA
        docker tag ${{ secrets.DOCKER_USERNAME }}/user-manager:${{ github.sha }} ${{ secrets.DOCKER_USERNAME }}/kofi-api:${{steps.version.outputs.version}}  # Tag with version
        docker tag ${{ secrets.DOCKER_USERNAME }}/user-manager:${{ github.sha }} ${{ secrets.DOCKER_USERNAME }}/kofi-api:latest  # Tag as latest

    # Step 5: Push Docker image to Docker Hub
    - name: Push Docker image to Docker Hub
      run: |
        docker push ${{ secrets.DOCKER_USERNAME }}/user-manager:${{ github.sha }}  # Push commit SHA tag
        docker push ${{ secrets.DOCKER_USERNAME }}/user-manager:latest  # Push latest tag
        docker push ${{ secrets.DOCKER_USERNAME }}/user-manager:${{steps.version.outputs.version}}  # Push version tag